// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Roleplay;

#nullable disable

namespace TrevizaniTextRoleplay.Server.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Roleplay.Entities.Animation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Dictionary")
                        .HasColumnType("text");

                    b.Property<string>("Display")
                        .HasColumnType("text");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<int>("Flag")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<bool>("Vehicle")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Animations");
                });

            modelBuilder.Entity("Roleplay.Entities.Banishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<int>("StaffUserId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("StaffUserId");

                    b.HasIndex("UserId");

                    b.ToTable("Banishments");
                });

            modelBuilder.Entity("Roleplay.Entities.Blip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte>("Color")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<float>("PosX")
                        .HasColumnType("real");

                    b.Property<float>("PosY")
                        .HasColumnType("real");

                    b.Property<float>("PosZ")
                        .HasColumnType("real");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Blips");
                });

            modelBuilder.Entity("Roleplay.Entities.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AnnouncementLastUseDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Armor")
                        .HasColumnType("integer");

                    b.Property<int>("Badge")
                        .HasColumnType("integer");

                    b.Property<int>("Bank")
                        .HasColumnType("integer");

                    b.Property<DateTime>("BirthdayDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("CKAvaliation")
                        .HasColumnType("boolean");

                    b.Property<int>("ConnectedTime")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeathDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeathReason")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Dimension")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DriverLicenseValidDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DrugEndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte?>("DrugItemCategory")
                        .HasColumnType("smallint");

                    b.Property<int?>("EvaluatingStaffUserId")
                        .HasColumnType("integer");

                    b.Property<int?>("EvaluatorStaffUserId")
                        .HasColumnType("integer");

                    b.Property<int>("ExtraPayment")
                        .HasColumnType("integer");

                    b.Property<string>("FactionFlagsJSON")
                        .HasColumnType("text");

                    b.Property<int?>("FactionId")
                        .HasColumnType("integer");

                    b.Property<int?>("FactionRankId")
                        .HasColumnType("integer");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<string>("History")
                        .HasColumnType("text");

                    b.Property<string>("IPLsJSON")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<DateTime?>("JailFinalDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte>("Job")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("LastAccessDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("LastAccessHardwareIdExHash")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("LastAccessHardwareIdHash")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("LastAccessIp")
                        .HasColumnType("text");

                    b.Property<decimal>("Mask")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("Model")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte>("NameChangeStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("PersonalizationJSON")
                        .HasColumnType("text");

                    b.Property<byte>("PersonalizationStep")
                        .HasColumnType("smallint");

                    b.Property<int?>("PoliceOfficerBlockedDriverLicenseCharacterId")
                        .HasColumnType("integer");

                    b.Property<float>("PosX")
                        .HasColumnType("real");

                    b.Property<float>("PosY")
                        .HasColumnType("real");

                    b.Property<float>("PosZ")
                        .HasColumnType("real");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("RegisterHardwareIdExHash")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("RegisterHardwareIdHash")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("RegisterIp")
                        .HasColumnType("text");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("text");

                    b.Property<int>("Savings")
                        .HasColumnType("integer");

                    b.Property<byte>("Sex")
                        .HasColumnType("smallint");

                    b.Property<byte>("ThresoldDeath")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("ThresoldDeathEndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<byte>("Wound")
                        .HasColumnType("smallint");

                    b.Property<string>("WoundsJSON")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EvaluatingStaffUserId");

                    b.HasIndex("EvaluatorStaffUserId");

                    b.HasIndex("FactionRankId");

                    b.HasIndex("PoliceOfficerBlockedDriverLicenseCharacterId");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Roleplay.Entities.CharacterItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("Category")
                        .HasColumnType("smallint");

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<string>("Extra")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<short>("Slot")
                        .HasColumnType("smallint");

                    b.Property<long>("Type")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("CharactersItems");
                });

            modelBuilder.Entity("Roleplay.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte>("BlipColor")
                        .HasColumnType("smallint");

                    b.Property<int>("BlipType")
                        .HasColumnType("integer");

                    b.Property<int?>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<float>("PosX")
                        .HasColumnType("real");

                    b.Property<float>("PosY")
                        .HasColumnType("real");

                    b.Property<float>("PosZ")
                        .HasColumnType("real");

                    b.Property<DateTime?>("RentPaymentDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("WeekRentValue")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Roleplay.Entities.CompanyCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<string>("FlagsJSON")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompaniesCharacters");
                });

            modelBuilder.Entity("Roleplay.Entities.Confiscation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("FactionId")
                        .HasColumnType("integer");

                    b.Property<int>("PoliceOfficerCharacterId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("FactionId");

                    b.HasIndex("PoliceOfficerCharacterId");

                    b.ToTable("Confiscations");
                });

            modelBuilder.Entity("Roleplay.Entities.ConfiscationItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("Category")
                        .HasColumnType("smallint");

                    b.Property<int>("ConfiscationId")
                        .HasColumnType("integer");

                    b.Property<string>("Extra")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<long>("Type")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ConfiscationId");

                    b.ToTable("ConfiscationsItems");
                });

            modelBuilder.Entity("Roleplay.Entities.CrackDen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CooldownDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CooldownHours")
                        .HasColumnType("integer");

                    b.Property<int>("CooldownQuantityLimit")
                        .HasColumnType("integer");

                    b.Property<int>("Dimension")
                        .HasColumnType("integer");

                    b.Property<int>("OnlinePoliceOfficers")
                        .HasColumnType("integer");

                    b.Property<float>("PosX")
                        .HasColumnType("real");

                    b.Property<float>("PosY")
                        .HasColumnType("real");

                    b.Property<float>("PosZ")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CrackDens");
                });

            modelBuilder.Entity("Roleplay.Entities.CrackDenItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CrackDenId")
                        .HasColumnType("integer");

                    b.Property<byte>("ItemCategory")
                        .HasColumnType("smallint");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CrackDensItems");
                });

            modelBuilder.Entity("Roleplay.Entities.CrackDenSell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("CrackDenId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte>("ItemCategory")
                        .HasColumnType("smallint");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("CrackDensSells");
                });

            modelBuilder.Entity("Roleplay.Entities.Door", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<int?>("FactionId")
                        .HasColumnType("integer");

                    b.Property<long>("Hash")
                        .HasColumnType("bigint");

                    b.Property<bool>("Locked")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<float>("PosX")
                        .HasColumnType("real");

                    b.Property<float>("PosY")
                        .HasColumnType("real");

                    b.Property<float>("PosZ")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Doors");
                });

            modelBuilder.Entity("Roleplay.Entities.EmergencyCall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<float>("PosX")
                        .HasColumnType("real");

                    b.Property<float>("PosY")
                        .HasColumnType("real");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("EmergencyCalls");
                });

            modelBuilder.Entity("Roleplay.Entities.Faction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ChatColor")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Slots")
                        .HasColumnType("integer");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Factions");
                });

            modelBuilder.Entity("Roleplay.Entities.FactionArmory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Dimension")
                        .HasColumnType("integer");

                    b.Property<int>("FactionId")
                        .HasColumnType("integer");

                    b.Property<float>("PosX")
                        .HasColumnType("real");

                    b.Property<float>("PosY")
                        .HasColumnType("real");

                    b.Property<float>("PosZ")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("FactionsArmories");
                });

            modelBuilder.Entity("Roleplay.Entities.FactionArmoryWeapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Ammo")
                        .HasColumnType("integer");

                    b.Property<string>("ComponentsJSON")
                        .HasColumnType("text");

                    b.Property<int>("FactionArmoryId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<byte>("TintIndex")
                        .HasColumnType("smallint");

                    b.Property<long>("Weapon")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("FactionsArmoriesWeapons");
                });

            modelBuilder.Entity("Roleplay.Entities.FactionDrugHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Dimension")
                        .HasColumnType("integer");

                    b.Property<int>("FactionId")
                        .HasColumnType("integer");

                    b.Property<float>("PosX")
                        .HasColumnType("real");

                    b.Property<float>("PosY")
                        .HasColumnType("real");

                    b.Property<float>("PosZ")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("FactionsDrugsHouses");
                });

            modelBuilder.Entity("Roleplay.Entities.FactionDrugHouseItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FactionDrugHouseId")
                        .HasColumnType("integer");

                    b.Property<byte>("ItemCategory")
                        .HasColumnType("smallint");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("FactionsDrugsHousesItems");
                });

            modelBuilder.Entity("Roleplay.Entities.FactionRank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FactionId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Position")
                        .HasColumnType("integer");

                    b.Property<int>("Salary")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("FactionsRanks");
                });

            modelBuilder.Entity("Roleplay.Entities.FactionUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("FactionId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Plate")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("FactionsUnits");
                });

            modelBuilder.Entity("Roleplay.Entities.FactionUnitCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("FactionUnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("FactionUnitId");

                    b.ToTable("FactionsUnitsCharacters");
                });

            modelBuilder.Entity("Roleplay.Entities.FinancialTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("FinancialTransactions");
                });

            modelBuilder.Entity("Roleplay.Entities.Fine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("PoliceOfficerCharacterId")
                        .HasColumnType("integer");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("PoliceOfficerCharacterId");

                    b.ToTable("Fines");
                });

            modelBuilder.Entity("Roleplay.Entities.Furniture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Furnitures");
                });

            modelBuilder.Entity("Roleplay.Entities.HelpRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AnswerDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<int>("StaffUserId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("HelpRequests");
                });

            modelBuilder.Entity("Roleplay.Entities.Info", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Dimension")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<float>("PosX")
                        .HasColumnType("real");

                    b.Property<float>("PosY")
                        .HasColumnType("real");

                    b.Property<float>("PosZ")
                        .HasColumnType("real");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Infos");
                });

            modelBuilder.Entity("Roleplay.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("Category")
                        .HasColumnType("smallint");

                    b.Property<int>("Dimension")
                        .HasColumnType("integer");

                    b.Property<string>("Extra")
                        .HasColumnType("text");

                    b.Property<float>("PosX")
                        .HasColumnType("real");

                    b.Property<float>("PosY")
                        .HasColumnType("real");

                    b.Property<float>("PosZ")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<float>("RotP")
                        .HasColumnType("real");

                    b.Property<float>("RotR")
                        .HasColumnType("real");

                    b.Property<float>("RotY")
                        .HasColumnType("real");

                    b.Property<long>("Type")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Roleplay.Entities.Jail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("FactionId")
                        .HasColumnType("integer");

                    b.Property<int>("PoliceOfficerCharacterId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("FactionId");

                    b.HasIndex("PoliceOfficerCharacterId");

                    b.ToTable("Jails");
                });

            modelBuilder.Entity("Roleplay.Entities.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("OriginCharacterId")
                        .HasColumnType("integer");

                    b.Property<decimal>("OriginHardwareIdExHash")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("OriginHardwareIdHash")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("OriginIp")
                        .HasColumnType("text");

                    b.Property<int?>("TargetCharacterId")
                        .HasColumnType("integer");

                    b.Property<decimal>("TargetHardwareIdExHash")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("TargetHardwareIdHash")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("TargetIp")
                        .HasColumnType("text");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("OriginCharacterId");

                    b.HasIndex("TargetCharacterId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Roleplay.Entities.Parameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnnouncementValue")
                        .HasColumnType("integer");

                    b.Property<int>("BarberValue")
                        .HasColumnType("integer");

                    b.Property<bool>("Blackout")
                        .HasColumnType("boolean");

                    b.Property<int>("ClothesValue")
                        .HasColumnType("integer");

                    b.Property<int>("CooldownDismantleHours")
                        .HasColumnType("integer");

                    b.Property<int>("CooldownPropertyRobberyPropertyHours")
                        .HasColumnType("integer");

                    b.Property<int>("CooldownPropertyRobberyRobberHours")
                        .HasColumnType("integer");

                    b.Property<int>("DriverLicenseBuyValue")
                        .HasColumnType("integer");

                    b.Property<int>("DriverLicenseRenewValue")
                        .HasColumnType("integer");

                    b.Property<byte>("EndTimeCrackDen")
                        .HasColumnType("smallint");

                    b.Property<int>("ExtraPaymentGarbagemanValue")
                        .HasColumnType("integer");

                    b.Property<int>("FirefightersBlockHeal")
                        .HasColumnType("integer");

                    b.Property<int>("FuelValue")
                        .HasColumnType("integer");

                    b.Property<int>("HospitalValue")
                        .HasColumnType("integer");

                    b.Property<string>("IPLsJSON")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InactivePropertiesDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte>("InitialTimeCrackDen")
                        .HasColumnType("smallint");

                    b.Property<int>("KeyValue")
                        .HasColumnType("integer");

                    b.Property<int>("LockValue")
                        .HasColumnType("integer");

                    b.Property<int>("MaxCharactersOnline")
                        .HasColumnType("integer");

                    b.Property<int>("Paycheck")
                        .HasColumnType("integer");

                    b.Property<int>("PoliceOfficersPropertyRobbery")
                        .HasColumnType("integer");

                    b.Property<int>("PropertyRobberyConnectedTime")
                        .HasColumnType("integer");

                    b.Property<int>("TattooValue")
                        .HasColumnType("integer");

                    b.Property<int>("VehicleParkValue")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Parameters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnnouncementValue = 1,
                            BarberValue = 1,
                            Blackout = false,
                            ClothesValue = 1,
                            CooldownDismantleHours = 0,
                            CooldownPropertyRobberyPropertyHours = 0,
                            CooldownPropertyRobberyRobberHours = 0,
                            DriverLicenseBuyValue = 1,
                            DriverLicenseRenewValue = 1,
                            EndTimeCrackDen = (byte)0,
                            ExtraPaymentGarbagemanValue = 1,
                            FirefightersBlockHeal = 0,
                            FuelValue = 1,
                            HospitalValue = 1,
                            IPLsJSON = "[]",
                            InitialTimeCrackDen = (byte)0,
                            KeyValue = 1,
                            LockValue = 1,
                            MaxCharactersOnline = 0,
                            Paycheck = 1,
                            PoliceOfficersPropertyRobbery = 0,
                            PropertyRobberyConnectedTime = 0,
                            TattooValue = 1,
                            VehicleParkValue = 1
                        });
                });

            modelBuilder.Entity("Roleplay.Entities.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("Roleplay.Entities.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int?>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("Dimension")
                        .HasColumnType("integer");

                    b.Property<float>("EntrancePosX")
                        .HasColumnType("real");

                    b.Property<float>("EntrancePosY")
                        .HasColumnType("real");

                    b.Property<float>("EntrancePosZ")
                        .HasColumnType("real");

                    b.Property<float>("ExitPosX")
                        .HasColumnType("real");

                    b.Property<float>("ExitPosY")
                        .HasColumnType("real");

                    b.Property<float>("ExitPosZ")
                        .HasColumnType("real");

                    b.Property<byte>("Interior")
                        .HasColumnType("smallint");

                    b.Property<long>("LockNumber")
                        .HasColumnType("bigint");

                    b.Property<bool>("Locked")
                        .HasColumnType("boolean");

                    b.Property<byte>("ProtectionLevel")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("RobberyCooldown")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("RobberyValue")
                        .HasColumnType("integer");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("Roleplay.Entities.PropertyFurniture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Interior")
                        .HasColumnType("boolean");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<float>("PosX")
                        .HasColumnType("real");

                    b.Property<float>("PosY")
                        .HasColumnType("real");

                    b.Property<float>("PosZ")
                        .HasColumnType("real");

                    b.Property<int>("PropertyId")
                        .HasColumnType("integer");

                    b.Property<float>("RotP")
                        .HasColumnType("real");

                    b.Property<float>("RotR")
                        .HasColumnType("real");

                    b.Property<float>("RotY")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertiesFurnitures");
                });

            modelBuilder.Entity("Roleplay.Entities.PropertyItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("Category")
                        .HasColumnType("smallint");

                    b.Property<string>("Extra")
                        .HasColumnType("text");

                    b.Property<int>("PropertyId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<byte>("Slot")
                        .HasColumnType("smallint");

                    b.Property<long>("Type")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PropertiesItems");
                });

            modelBuilder.Entity("Roleplay.Entities.Punishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<int>("StaffUserId")
                        .HasColumnType("integer");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("StaffUserId");

                    b.ToTable("Punishments");
                });

            modelBuilder.Entity("Roleplay.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CorrectQuestionAnswerId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Roleplay.Entities.QuestionAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("QuestionsAnswers");
                });

            modelBuilder.Entity("Roleplay.Entities.SeizedVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("FactionId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("PoliceOfficerCharacterId")
                        .HasColumnType("integer");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.Property<int>("VehicleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SeizedVehicles");
                });

            modelBuilder.Entity("Roleplay.Entities.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Roleplay.Entities.Spot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("AuxiliarPosX")
                        .HasColumnType("real");

                    b.Property<float>("AuxiliarPosY")
                        .HasColumnType("real");

                    b.Property<float>("AuxiliarPosZ")
                        .HasColumnType("real");

                    b.Property<float>("PosX")
                        .HasColumnType("real");

                    b.Property<float>("PosY")
                        .HasColumnType("real");

                    b.Property<float>("PosZ")
                        .HasColumnType("real");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Spots");
                });

            modelBuilder.Entity("Roleplay.Entities.TruckerLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AllowedVehiclesJSON")
                        .HasColumnType("text");

                    b.Property<int>("DeliveryValue")
                        .HasColumnType("integer");

                    b.Property<int>("LoadWaitTime")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<float>("PosX")
                        .HasColumnType("real");

                    b.Property<float>("PosY")
                        .HasColumnType("real");

                    b.Property<float>("PosZ")
                        .HasColumnType("real");

                    b.Property<int>("UnloadWaitTime")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("TruckerLocations");
                });

            modelBuilder.Entity("Roleplay.Entities.TruckerLocationDelivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("PosX")
                        .HasColumnType("real");

                    b.Property<float>("PosY")
                        .HasColumnType("real");

                    b.Property<float>("PosZ")
                        .HasColumnType("real");

                    b.Property<int>("TruckerLocationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("TruckerLocationsDeliveries");
                });

            modelBuilder.Entity("Roleplay.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AnnouncementToggle")
                        .HasColumnType("boolean");

                    b.Property<bool>("AnsweredQuestions")
                        .HasColumnType("boolean");

                    b.Property<int>("CharacterApplicationsQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("ChatFontSize")
                        .HasColumnType("integer");

                    b.Property<int>("ChatFontType")
                        .HasColumnType("integer");

                    b.Property<int>("ChatLines")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CooldownDismantle")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DiscordDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("DiscordId")
                        .HasColumnType("text");

                    b.Property<string>("DiscordUsername")
                        .HasColumnType("text");

                    b.Property<bool>("FactionChatToggle")
                        .HasColumnType("boolean");

                    b.Property<bool>("FactionToggle")
                        .HasColumnType("boolean");

                    b.Property<int>("ForumNameChanges")
                        .HasColumnType("integer");

                    b.Property<int>("HelpRequestsAnswersQuantity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastAccessDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("LastAccessHardwareIdExHash")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("LastAccessHardwareIdHash")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("LastAccessIp")
                        .HasColumnType("text");

                    b.Property<int>("NameChanges")
                        .HasColumnType("integer");

                    b.Property<bool>("PMToggle")
                        .HasColumnType("boolean");

                    b.Property<int>("PlateChanges")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("PropertyRobberyCooldown")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("RegisterHardwareIdExHash")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("RegisterHardwareIdHash")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("RegisterIp")
                        .HasColumnType("text");

                    b.Property<int>("Staff")
                        .HasColumnType("integer");

                    b.Property<bool>("StaffChatToggle")
                        .HasColumnType("boolean");

                    b.Property<int>("StaffDutyTime")
                        .HasColumnType("integer");

                    b.Property<string>("StaffFlagsJSON")
                        .HasColumnType("text");

                    b.Property<bool>("TimeStampToggle")
                        .HasColumnType("boolean");

                    b.Property<byte>("VIP")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("VIPValidDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("VehicleTagToggle")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Roleplay.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("BodyAdditionalHealth")
                        .HasColumnType("bigint");

                    b.Property<long>("BodyHealth")
                        .HasColumnType("bigint");

                    b.Property<int?>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<byte>("Color1B")
                        .HasColumnType("smallint");

                    b.Property<byte>("Color1G")
                        .HasColumnType("smallint");

                    b.Property<byte>("Color1R")
                        .HasColumnType("smallint");

                    b.Property<byte>("Color2B")
                        .HasColumnType("smallint");

                    b.Property<byte>("Color2G")
                        .HasColumnType("smallint");

                    b.Property<byte>("Color2R")
                        .HasColumnType("smallint");

                    b.Property<string>("DamagesJSON")
                        .HasColumnType("text");

                    b.Property<int>("DismantledValue")
                        .HasColumnType("integer");

                    b.Property<int>("EngineHealth")
                        .HasColumnType("integer");

                    b.Property<bool>("FactionGift")
                        .HasColumnType("boolean");

                    b.Property<int?>("FactionId")
                        .HasColumnType("integer");

                    b.Property<int>("Fuel")
                        .HasColumnType("integer");

                    b.Property<byte>("HeadlightColor")
                        .HasColumnType("smallint");

                    b.Property<byte>("Job")
                        .HasColumnType("smallint");

                    b.Property<float>("LightsMultiplier")
                        .HasColumnType("real");

                    b.Property<byte>("Livery")
                        .HasColumnType("smallint");

                    b.Property<long>("LockNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<string>("ModsJSON")
                        .HasColumnType("text");

                    b.Property<bool>("NeonBack")
                        .HasColumnType("boolean");

                    b.Property<byte>("NeonColorB")
                        .HasColumnType("smallint");

                    b.Property<byte>("NeonColorG")
                        .HasColumnType("smallint");

                    b.Property<byte>("NeonColorR")
                        .HasColumnType("smallint");

                    b.Property<bool>("NeonFront")
                        .HasColumnType("boolean");

                    b.Property<bool>("NeonLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("NeonRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("Parked")
                        .HasColumnType("boolean");

                    b.Property<int>("PetrolTankHealth")
                        .HasColumnType("integer");

                    b.Property<string>("Plate")
                        .HasColumnType("text");

                    b.Property<float>("PosX")
                        .HasColumnType("real");

                    b.Property<float>("PosY")
                        .HasColumnType("real");

                    b.Property<float>("PosZ")
                        .HasColumnType("real");

                    b.Property<byte>("ProtectionLevel")
                        .HasColumnType("smallint");

                    b.Property<float>("RotP")
                        .HasColumnType("real");

                    b.Property<float>("RotR")
                        .HasColumnType("real");

                    b.Property<float>("RotY")
                        .HasColumnType("real");

                    b.Property<int>("SeizedValue")
                        .HasColumnType("integer");

                    b.Property<bool>("Sold")
                        .HasColumnType("boolean");

                    b.Property<string>("StructureDamagesJSON")
                        .HasColumnType("text");

                    b.Property<byte>("TireSmokeColorB")
                        .HasColumnType("smallint");

                    b.Property<byte>("TireSmokeColorG")
                        .HasColumnType("smallint");

                    b.Property<byte>("TireSmokeColorR")
                        .HasColumnType("smallint");

                    b.Property<byte>("WheelColor")
                        .HasColumnType("smallint");

                    b.Property<byte>("WheelType")
                        .HasColumnType("smallint");

                    b.Property<byte>("WheelVariation")
                        .HasColumnType("smallint");

                    b.Property<byte>("WindowTint")
                        .HasColumnType("smallint");

                    b.Property<bool>("XMR")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("FactionId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Roleplay.Entities.VehicleItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("Category")
                        .HasColumnType("smallint");

                    b.Property<string>("Extra")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<byte>("Slot")
                        .HasColumnType("smallint");

                    b.Property<long>("Type")
                        .HasColumnType("bigint");

                    b.Property<int>("VehicleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("VehiclesItems");
                });

            modelBuilder.Entity("Roleplay.Entities.Wanted", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("PoliceOfficerCharacterId")
                        .HasColumnType("integer");

                    b.Property<int?>("PoliceOfficerDeletedCharacterId")
                        .HasColumnType("integer");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<int?>("WantedCharacterId")
                        .HasColumnType("integer");

                    b.Property<int?>("WantedVehicleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PoliceOfficerCharacterId");

                    b.HasIndex("WantedCharacterId");

                    b.HasIndex("WantedVehicleId");

                    b.ToTable("Wanted");
                });

            modelBuilder.Entity("Roleplay.Entities.Banishment", b =>
                {
                    b.HasOne("Roleplay.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Roleplay.Entities.User", "StaffUser")
                        .WithMany()
                        .HasForeignKey("StaffUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Roleplay.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Character");

                    b.Navigation("StaffUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Roleplay.Entities.Character", b =>
                {
                    b.HasOne("Roleplay.Entities.User", "EvaluatingStaffUser")
                        .WithMany("EvaluatingCharacters")
                        .HasForeignKey("EvaluatingStaffUserId");

                    b.HasOne("Roleplay.Entities.User", "EvaluatorStaffUser")
                        .WithMany("EvaluatorCharacters")
                        .HasForeignKey("EvaluatorStaffUserId");

                    b.HasOne("Roleplay.Entities.FactionRank", "FactionRank")
                        .WithMany()
                        .HasForeignKey("FactionRankId");

                    b.HasOne("Roleplay.Entities.Character", "PoliceOfficerBlockedDriverLicenseCharacter")
                        .WithMany()
                        .HasForeignKey("PoliceOfficerBlockedDriverLicenseCharacterId");

                    b.HasOne("Roleplay.Entities.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EvaluatingStaffUser");

                    b.Navigation("EvaluatorStaffUser");

                    b.Navigation("FactionRank");

                    b.Navigation("PoliceOfficerBlockedDriverLicenseCharacter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Roleplay.Entities.CompanyCharacter", b =>
                {
                    b.HasOne("Roleplay.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Roleplay.Entities.Company", "Company")
                        .WithMany("Characters")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Roleplay.Entities.Confiscation", b =>
                {
                    b.HasOne("Roleplay.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Roleplay.Entities.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Roleplay.Entities.Character", "PoliceOfficerCharacter")
                        .WithMany()
                        .HasForeignKey("PoliceOfficerCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Faction");

                    b.Navigation("PoliceOfficerCharacter");
                });

            modelBuilder.Entity("Roleplay.Entities.ConfiscationItem", b =>
                {
                    b.HasOne("Roleplay.Entities.Confiscation", "Confiscation")
                        .WithMany("Items")
                        .HasForeignKey("ConfiscationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Confiscation");
                });

            modelBuilder.Entity("Roleplay.Entities.CrackDenSell", b =>
                {
                    b.HasOne("Roleplay.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Roleplay.Entities.FactionUnit", b =>
                {
                    b.HasOne("Roleplay.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Roleplay.Entities.FactionUnitCharacter", b =>
                {
                    b.HasOne("Roleplay.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Roleplay.Entities.FactionUnit", "FactionUnit")
                        .WithMany("Characters")
                        .HasForeignKey("FactionUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("FactionUnit");
                });

            modelBuilder.Entity("Roleplay.Entities.Fine", b =>
                {
                    b.HasOne("Roleplay.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Roleplay.Entities.Character", "PoliceOfficerCharacter")
                        .WithMany()
                        .HasForeignKey("PoliceOfficerCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("PoliceOfficerCharacter");
                });

            modelBuilder.Entity("Roleplay.Entities.Info", b =>
                {
                    b.HasOne("Roleplay.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Roleplay.Entities.Jail", b =>
                {
                    b.HasOne("Roleplay.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Roleplay.Entities.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Roleplay.Entities.Character", "PoliceOfficerCharacter")
                        .WithMany()
                        .HasForeignKey("PoliceOfficerCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Faction");

                    b.Navigation("PoliceOfficerCharacter");
                });

            modelBuilder.Entity("Roleplay.Entities.Log", b =>
                {
                    b.HasOne("Roleplay.Entities.Character", "OriginCharacter")
                        .WithMany()
                        .HasForeignKey("OriginCharacterId");

                    b.HasOne("Roleplay.Entities.Character", "TargetCharacter")
                        .WithMany()
                        .HasForeignKey("TargetCharacterId");

                    b.Navigation("OriginCharacter");

                    b.Navigation("TargetCharacter");
                });

            modelBuilder.Entity("Roleplay.Entities.Property", b =>
                {
                    b.HasOne("Roleplay.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId");

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Roleplay.Entities.PropertyFurniture", b =>
                {
                    b.HasOne("Roleplay.Entities.Property", "Property")
                        .WithMany("Furnitures")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Roleplay.Entities.Punishment", b =>
                {
                    b.HasOne("Roleplay.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Roleplay.Entities.User", "StaffUser")
                        .WithMany()
                        .HasForeignKey("StaffUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("StaffUser");
                });

            modelBuilder.Entity("Roleplay.Entities.Vehicle", b =>
                {
                    b.HasOne("Roleplay.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId");

                    b.HasOne("Roleplay.Entities.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId");

                    b.Navigation("Character");

                    b.Navigation("Faction");
                });

            modelBuilder.Entity("Roleplay.Entities.Wanted", b =>
                {
                    b.HasOne("Roleplay.Entities.Character", "PoliceOfficerCharacter")
                        .WithMany()
                        .HasForeignKey("PoliceOfficerCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Roleplay.Entities.Character", "WantedCharacter")
                        .WithMany()
                        .HasForeignKey("WantedCharacterId");

                    b.HasOne("Roleplay.Entities.Vehicle", "WantedVehicle")
                        .WithMany()
                        .HasForeignKey("WantedVehicleId");

                    b.Navigation("PoliceOfficerCharacter");

                    b.Navigation("WantedCharacter");

                    b.Navigation("WantedVehicle");
                });

            modelBuilder.Entity("Roleplay.Entities.Company", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("Roleplay.Entities.Confiscation", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Roleplay.Entities.FactionUnit", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("Roleplay.Entities.Property", b =>
                {
                    b.Navigation("Furnitures");
                });

            modelBuilder.Entity("Roleplay.Entities.User", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("EvaluatingCharacters");

                    b.Navigation("EvaluatorCharacters");
                });
#pragma warning restore 612, 618
        }
    }
}
